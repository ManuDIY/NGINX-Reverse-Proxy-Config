################################
#########Event Handling#########
################################
events {
    worker_connections 1024;
}



################################
########Stream Proxying#########
################################
stream {
   
    # Defining upstream servers for proxied traffic
    upstream tcp_backend {
        server 24.17.203.10:8050;
    }
    upstream udp_backend {
        server 24.17.203.10:8051;
    }
    upstream ssh_backend {
        server 24.17.203.10:8052;
    }


    # Defining protocols and ports for data to be proxied.
    server {
        proxy_connect_timeout 300s;
        proxy_timeout 300s;
        listen 8050;
        proxy_pass tcp_backend;
    }
    server {
        proxy_connect_timeout 300s;
        proxy_timeout 300s;
        listen 8051 udp;
        proxy_pass udp_backend;
    }
    server {
        proxy_connect_timeout 300s;
        proxy_timeout 300s;
        listen 8052;
        proxy_pass ssh_backend;
    }
}



################################
########Reverse Proxying########
################################
http {

    # Add an HSTS header. (Domain should only ever be browsed over HTTPS)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Define SSL options
    ssl_certificate /etc/letsencrypt/live/tjzimmerman.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tjzimmerman.com/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;

    # Redirect all incoming HTTP traffic to HTTPS.
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }


    # RP @ WWW -> Website
    server {
        listen 443 ssl;
        server_name www.tjzimmerman.com;
        ssl on;
        location / {
            proxy_pass http://24.17.203.10:2000/;

            sub_filter </head>
            '<script language="javascript" src="/analytics.js"></script></head>';
            sub_filter_once on;
        }
    ssl_certificate /etc/letsencrypt/live/tjzimmerman.com-0002/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tjzimmerman.com-0002/privkey.pem; # managed by Certbot

}


    # RP @ . -> Website
    server {
        listen 443 ssl;
        server_name tjzimmerman.com;
        ssl on;
        location / {
            proxy_pass http://24.17.203.10:2000/;

            sub_filter </head>
            '<script type="text/javascript" src="/analytics.js"></script></head>';
            sub_filter_once on;

        }
    ssl_certificate /etc/letsencrypt/live/tjzimmerman.com-0002/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tjzimmerman.com-0002/privkey.pem; # managed by Certbot

}


    # RP @ Grafana -> Grafana Web Interface
    server {
        listen 443 ssl;
        server_name grafana.tjzimmerman.com;
        ssl on;
        location / {
            proxy_pass http://24.17.203.10:3000;

            sub_filter </head>
            '<script language="javascript" src="/analytics.js"></script></head>';
            sub_filter_once on;
        }
    ssl_certificate /etc/letsencrypt/live/tjzimmerman.com-0002/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tjzimmerman.com-0002/privkey.pem; # managed by Certbot

}


    # RP @ NextCloud -> NextCloud Web Interface
    server {
        listen 443 ssl;
        server_name nextcloud.tjzimmerman.com;
        ssl on;
        location / {
            proxy_pass https://24.17.203.10:8080;
        }
    ssl_certificate /etc/letsencrypt/live/tjzimmerman.com-0002/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tjzimmerman.com-0002/privkey.pem; # managed by Certbot

}


    # RP @ VPN -> OpenVPN Access Server
    server {
        listen 443 ssl;
        server_name vpn.tjzimmerman.com;
        ssl on;
        location / {
            proxy_pass https://24.17.203.10:943;

            sub_filter </head>
            '<script language="javascript" src="/analytics.js"></script></head>';
            sub_filter_once on;
        }
    ssl_certificate /etc/letsencrypt/live/tjzimmerman.com-0002/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tjzimmerman.com-0002/privkey.pem; # managed by Certbot

}


    # RP @ rp -> Netdata Web Interface
    server {
        listen 443 ssl;
        server_name rp.tjzimmerman.com;
        ssl on;

        # Support basic password authentication
        auth_basic "Are you sure you're supposed to be here?";
        auth_basic_user_file /passwords;
        location / {

            # Set the headers...
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Actual proxying...
            proxy_pass http://127.0.0.1:19999;
            proxy_http_version 1.1;
            proxy_pass_request_headers on;
            proxy_set_header Connection "keep-alive";
            proxy_store off;

            sub_filter </head>
            '<script language="javascript" src="/analytics.js"></script></head>';
            sub_filter_once on;
        }
    ssl_certificate /etc/letsencrypt/live/tjzimmerman.com-0002/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tjzimmerman.com-0002/privkey.pem; # managed by Certbot

}
}
